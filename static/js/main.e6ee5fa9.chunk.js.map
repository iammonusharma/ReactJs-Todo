{"version":3,"sources":["Components/Todos.js","Components/TodoForm.js","App.js","reportWebVitals.js","index.js"],"names":["Todos","todos","markComplete","ListGroup","className","map","todo","ListGroupItem","todoString","onClick","id","TodoForm","addTodos","useState","setTodoString","Form","onSubmit","e","preventDefault","alert","v4","FormGroup","InputGroup","Input","type","name","placeholder","value","onChange","target","InputGroupAddon","addonType","Button","color","App","setTodos","useEffect","localTodos","localStorage","getItem","console","log","JSON","parse","a","setItem","stringify","Container","fluid","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iUAkBeA,EAdH,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,MAAMC,EAAgB,EAAhBA,aAChB,OACI,cAACC,EAAA,EAAD,CAAWC,UAAU,iCAArB,SACKH,EAAMI,KAAI,SAAAC,GAAI,OACX,eAACC,EAAA,EAAD,WACKD,EAAKE,WACN,sBAAMJ,UAAU,iBAChBK,QAAS,kBAAIP,EAAaI,EAAKI,KAD/B,SAEC,cAAC,IAAD,QAJeJ,EAAKI,U,wDC0C1BC,EAvCA,SAAC,GAAc,IAAbC,EAAY,EAAZA,SACb,EAAiCC,mBAAS,IAA1C,mBAAOL,EAAP,KAAkBM,EAAlB,KAcA,OACI,cAACC,EAAA,EAAD,CAAMC,SAbS,SAAAC,GAEf,GADAA,EAAEC,iBACc,KAAbV,EACC,OAAOW,MAAM,0BAEjB,IAAOb,EAAK,CACRE,aACAE,GAAGU,eAEPR,EAASN,GACTQ,EAAc,KAGd,SACI,cAACO,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,WACA,cAACC,EAAA,EAAD,CACAC,KAAK,OACLC,KAAK,OACLf,GAAG,OACHgB,YAAY,sBACZC,MAAOnB,EACPoB,SAAU,SAAAX,GAAC,OAAEH,EAAcG,EAAEY,OAAOF,UAEpC,cAACG,EAAA,EAAD,CAAiBC,UAAU,UAA3B,SACA,cAACC,EAAA,EAAD,CACAC,MAAM,UADN,gCCADC,EA/BL,WACR,MAAuBrB,mBAAS,IAAhC,mBAAOZ,EAAP,KAAakC,EAAb,KAEAC,qBAAU,WACR,IAAMC,EAAWC,aAAaC,QAAQ,SACtCC,QAAQC,IAAI,CAACH,4BACVD,GACDF,EAASO,KAAKC,MAAMN,MAEtB,IAEF,IAAMzB,EAAQ,uCAAE,WAAMN,GAAN,SAAAsC,EAAA,sDACdT,EAAS,GAAD,mBAAKlC,GAAL,CAAWK,KADL,2CAAF,sDAId8B,qBAAU,WACRE,aAAaO,QAAQ,QAAQH,KAAKI,UAAU7C,MAC5C,CAACA,IAMH,OACE,eAAC8C,EAAA,EAAD,CAAWC,OAAK,EAAhB,UACE,sDACA,cAAC,EAAD,CAAO/C,MAAOA,EAAOC,aAPN,SAAAQ,GACjByB,EAASlC,EAAMgD,QAAO,SAAA3C,GAAI,OAAEA,EAAKI,KAAMA,SAOrC,cAAC,EAAD,CAAUE,SAAUA,QCvBXsC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e6ee5fa9.chunk.js","sourcesContent":["import React from \"react\"\r\nimport {ListGroup,ListGroupItem} from \"reactstrap\"\r\nimport {FaCheckDouble} from \"react-icons/fa\"\r\n\r\nconst Todos=({todos,markComplete})=>{\r\n    return(\r\n        <ListGroup className=\"mt-5 mb-2 items text-uppercase\">\r\n            {todos.map(todo=>(\r\n                <ListGroupItem key={todo.id}>\r\n                    {todo.todoString}\r\n                    <span className=\"mt-1 float-end\"\r\n                    onClick={()=>markComplete(todo.id)}\r\n                    ><FaCheckDouble /></span>\r\n                </ListGroupItem>\r\n            ))}\r\n        </ListGroup>\r\n    );\r\n};\r\nexport default Todos;","import React,{ useState } from \"react\";\r\nimport{\r\n    Form,FormGroup,\r\n    Input,\r\n    InputGroup,\r\n    InputGroupAddon,\r\n    Button,\r\n    Container\r\n} from \"reactstrap\"\r\nimport {v4} from \"uuid\"\r\n\r\nconst TodoForm=({addTodos})=>{\r\n    const [todoString,setTodoString]=useState(\"\")\r\n\r\n    const handleSubmit=e=>{\r\n        e.preventDefault()\r\n        if(todoString===\"\"){\r\n            return alert(\"Please fill some value\")\r\n        }\r\n        const  todo={\r\n            todoString,\r\n            id:v4()\r\n        }\r\n        addTodos(todo)\r\n        setTodoString(\"\")\r\n    }\r\n    return(\r\n        <Form onSubmit={handleSubmit}>\r\n            <FormGroup>\r\n                <InputGroup>\r\n                <Input\r\n                type=\"text\"\r\n                name=\"todo\"\r\n                id=\"todo\"\r\n                placeholder=\"Enter a todo String\"\r\n                value={todoString}\r\n                onChange={e=>setTodoString(e.target.value)}\r\n                />\r\n                <InputGroupAddon addonType=\"prepend\">\r\n                <Button\r\n                color=\"warning\">\r\n                Add Todo\r\n                </Button>\r\n                </InputGroupAddon>\r\n                </InputGroup>\r\n            </FormGroup>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default TodoForm;","import React,{useState,useEffect} from \"react\"\nimport {Container} from \"reactstrap\"\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport \"./App.css\"\n\nimport Todos from \"./Components/Todos\"\nimport TodoForm from \"./Components/TodoForm\"\n\nconst App=()=>{\n  const [todos,setTodos]=useState([])\n\n  useEffect(()=>{\n    const localTodos=localStorage.getItem(\"todos\")\n    console.log({localStorage});\n    if(localTodos){\n      setTodos(JSON.parse(localTodos))\n    }\n  },[]);\n\n  const addTodos= async todo=>{\n    setTodos([...todos,todo])\n  }\n\n  useEffect(()=>{\n    localStorage.setItem(\"todos\",JSON.stringify(todos));\n  },[todos]);\n\n  const markComplete=id=>{\n    setTodos(todos.filter(todo=>todo.id !==id))\n  };\n\n  return(\n    <Container fluid>\n      <h1>Add Your Todo Here :</h1>\n      <Todos todos={todos} markComplete={markComplete}/>\n      <TodoForm addTodos={addTodos}/>\n    </Container>\n  )\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}